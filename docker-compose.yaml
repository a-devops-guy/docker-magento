version: '3.8'

services:
    #cron, install services, debugging tools included
    php:
        image: magento-cli:v1
        build:
            context: ./magento
            dockerfile: dockerfile
        container_name: php
        #entrypoint: /usr/sbin/crond
        #command: -f
        environment:
            - INSTALL_SAMPLE_DATA=false #by default sample data will be installed change it to false if u dont want to
        depends_on:
            - mysql
            - es
            - redis
            - rabbitmq
        volumes:
            - magento:/var/www/html/
            - ./magento/auth.json:/root/.composer/auth.json
            - ./magento/php.ini:/usr/local/etc/php/php.ini
        networks:
            - magento
        dns:
            - 8.8.8.8
            - 8.8.4.4
    
    #frontend service containers
    varnish:
        image: varnish:6.6.0-1
        container_name: varnish
        restart: unless-stopped
        depends_on:
            - php
            - nginx
        command: varnishd -a :80 -f /etc/varnish/default.vcl -t 600 -F
        ports:
            - 80:80
        volumes:
            - ./varnish/varnish.vcl:/etc/varnish/default.vcl
        networks:
            - magento
    nginx:
        image: nginx:1.19.10-alpine
        container_name: nginx
        restart: unless-stopped
        depends_on:
            - php
            - fpm
        volumes:
            - magento:/var/www/html/
            - ./nginx/magento.conf:/etc/nginx/conf.d/default.conf
        networks:
            - magento
    fpm:
        image: magento-fpm:v1
        build:
            context: ./php-fpm
            dockerfile: dockerfile
        container_name: fpm
        restart: unless-stopped
        depends_on:
            - php
        volumes:
            - magento:/var/www/html/
            - ./php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
        networks:
            - magento
     
    #backend service containers
    mysql:
        image: mysql:5.7.34
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: magento
            MYSQL_DATABASE: magento
            MYSQL_USER: magento
            MYSQL_PASSWORD: magento
        volumes:
            - mysql:/var/lib/mysql
        networks:
            - magento
    es:
        image: elasticsearch:7.12.0
        container_name: es
        restart: unless-stopped
        environment:
            - discovery.type=single-node
        volumes:
            - es:/usr/share/elasticsearch/data/
            - ./ES7/jvm.options:/usr/share/elasticsearch/config/jvm.options
        networks:
            - magento
    redis:
        image: redis:6.2.2-alpine3.13
        container_name: redis
        restart: unless-stopped
        command: redis-server /usr/local/etc/redis/redis.conf 
        volumes:
            - redis:/data
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
            - magento
    rabbitmq:
        image: rabbitmq:3.8.15-rc.2-management-alpine
        container_name: rmq
        restart: unless-stopped
        ports:
            - 8080:15672
        volumes:
            - rabbitmq:/var/lib/rabbitmq/
        networks:
            - magento

volumes:
    magento:
    mysql:
    es:
    redis:
    rabbitmq:
        
networks:
    magento:
        driver: bridge